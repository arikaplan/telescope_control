                                                                                                                     
######### things to do ##########
note that the precision on these scans is not perfect, figure 
out what precision is required, i think its coming from rounding errors and conversion between cts and degrees.


decide if speed should be set or variable

find absolute position of encoder, right now there is no reference
point


code to keep telescope from pointing below horizon may need higher limit than 0

it might be possible/better to combine the forward and backward passes into one block of code, use -1**i and a list for min/max az then do list[i % 2] or something like that (scan.py: linearScan() & horizontalScan())

for azscan think about the best way to do input parameters for rotation, i.e. distance based on distance, time, or rotations, have each option as a button?


changing the speed of az motor creates an error...except now it doesnt

add elevation logic to not let azscan go below horizon, at some point

you could define some function that sets the absolute zero at some random position, then always return to that position at the end of each session, that way when it turns on the next time the zero will always be the same, whereas now zero is wherever it happens to be positioned when it turns on

figure out if there is a better way to convert az el coordinates outputted by ephem into degrees(planets.py)

put in logic that allows for different scan times at each elevation(scan.py: azScan())


****eventually you should figure out how to connect to the controller in some macro program, and not have to do it in each individual script, this will probably come naturally with the interface.
also should get around setting the motion controls in each script******

moveto speed and scan speed should probably be different(scan.py vs moveto.py)

forward/backward pass # comments are incorrect, jumps form 1 to 3, figure out the right way to do this(scan.py: linearScan() & horizontalScan())


Think about how best to display ouput, and what output we want to display (gui related)


gui.py cant run on its own as is until I run one of the other programs, I imagine this has something to do with connecting to the machine. Except I just turned on the machine and it didnt have a problem this time...

WTF is different between gui_basic and gui_tabs?!?!?!?! one compiles and one doesnt

device often times out the first time running gui

I tried to make a stop button, but you cant press another button until the last command has run, figure out a way around this. 

figure out how to better adjust layout, its weird right now

why does the output frame only put text in the middle....??

in moveto the position statements should be changed to refer to config file where they have % (cts/rev)

put in some logic to azScan to accept hours instead of seconds for tscan, maybe change the default to hours, then if input is less than one, have some logic to convert that to seconds, or maybe timdelta can just handle that. or have an option to do either and you have to specify at input

replace all AM's with MG _BGA logic, 
- this also means you can do different logic for PR command, right now its time based, it could also just be distance based

in moveto decide whether or not you can have 2 axes moving at once

in moveto.location you make the elevation axis go the short way round, you should probably make it go whichever way doesnt take elev < 0
